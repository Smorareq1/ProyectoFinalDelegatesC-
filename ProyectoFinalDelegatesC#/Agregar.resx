<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>